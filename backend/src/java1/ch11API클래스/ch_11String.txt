ch11_String 
P.466
ch11 - 1
예외처리 [ Exception ]

	1. 일반예외 : 컴파일 전에 오류 체크[ 실행전에 자바가 알고있는 오류는 미리 예외처리 ]
		*외부와 연결 [ 키보드 , DAO , FILE , 소켓 등 ]
	2. 실행예외 : 컴파일 전에 오류 체크X [ 실행후에 발생하는 예외 - 개발자 경험/짐작 ]

	try{
		예외 방생 할것같은 코드 / 외부 연결
	}
	catch ( 예외클래스 변수명 ) { 오류 대체 코드 }

문자열 클래스
	* 키보드[바이트 단위] -> 바이트열[배열]
	0. 생성자
		1. new String( 바이트열[배열] );
		2. = "유재석"	"": String
	1. 메소드 
		1. 문자열.charAt(인덱스) : 해당 인덱스의 문자1개 추출

		2. 문자열1.equals(문자열2) : 두 문자열 비교

		3. 문자열.getBytes( 인코딩타입 ) : 바이트열 변환
			*EUC-KR , UTF-8 : 한글 지원해주는 인코딩[숫자 -> 문자 변환 규칙 ]

		4. 문자열.indexOf( "검색문자" ) : 해당 문자의 문자 인덱스번호 찾기
				- contains( "검색문자" ) : 해당 문자가 존재하면 TRLU / FALSE

		5. 문자열.length() : 문자열 길이

		6. 문자열.replace("기존문자" , "새로운문자" ) : 치환

		7. 문자열.toLowerCase() : 소문자변환 / toUpperCase() : 대문자변환

		8. 문자열.trim()	: 앞뒤 공백 제거

		9. 문자열.valueOf( "데이터" ) : 다른자료형 --> 문자열(String) 변환

		10. 문자열.subString( [시작 인덱스(포함)] , [끝 인덱스(제외)] : 생략시 -> 마지막인덱스  ) : 문자열 자르기 

		11. 문자열.split( "기준문자" ) : 기준문자 기준으로 분해 -> 분해된 각 문자열은 String 배열에 각 인덱스 저장


• 6가지 키워드로 끝내는 핵심 포인트

• Oble0t 클래스: 자바의 최상위 부모 클래스입니다. 따라서 Ohilect 클래스의 메소드는 모든 자바 객체에서 사용할 수 있습니다.

• System 클래스: System 클래스를 이용하면 운영체제의 일부 기능을 이용할 수 있습니다. 
		즉.프로그램 종료, 키보드로부터 입력, 모니터로 출력, 현재 시간 읽기 등이 가능합니다. Sysc) 
		클래스의 모든 펄드와 메소드는 정적 필드와 정적 메소드로 구성되어 있습니다.

• Class 클래스: 자바는 클래스와 인터페이스의 메타 데이터를 Class 클래스로 관리합니다. 
	메타 데이터란 클래스의 이름, 생성자 정보, 필드 정보, 메소드 정보를 말합니다.

• String 클래스: 문자열 리터럴은 String 객체로 자동 생성되지만, String 클래스의 다양한 생 성자를 이용해서 직접 String 객체를 		
				생성할 수도 있습니다. String 객체는 문자열 조작을 위 한 많은 메소드를 가지고 있습니다.

• Wrapper(포장) 클래스: 기본 타입의 값을 갖는 객체를 포장 객체라고 합니다. 포장 객체는 외 부에서 변경할 수 없습니다. 
			기본 타입의 값을 포장 객체로 만드는 것을 박싱이라고 하고, 
			반대 로 포장 객체로부터 기본 타입의 값을 얻는 것을 언박싱이라고 합니다.

• Math 클래스: 수학 계산에 사용할 수 있는 메소드를 제공하며,
		 Math 클래스가 제공하는 메소 드는 모두 정적 메소드이므로 Math 클래스로 바로 사용할 수 있습니다.
		 
* Object 클래스
여러분이 클래스를 선언할 때 extends 키워드로 다른 클래스를 상속하지 않더라도 암시적으로 java. lang. Object 글래스를 상속하게 됩니다.
따라서 자바의 모든 클래스는 Object 클래스의 자식 이거나 자손 클래스입니다. 
Object는 자바의 최상위 부모 클래스에 해당합니다.		 
		 
